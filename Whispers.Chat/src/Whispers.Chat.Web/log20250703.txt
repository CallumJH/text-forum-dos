2025-07-03 13:34:17.068 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 13:39:21.269 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 13:39:21.286 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 13:39:21.287 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 13:40:53.169 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 13:40:53.188 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 13:40:53.188 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 13:40:53.189 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 15:29:19.366 +02:00 [INF] Registered 5 endpoints in 906 milliseconds.
2025-07-03 15:29:35.005 +02:00 [ERR] An error occurred seeding the DB. A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: Named Pipes Provider, error: 40 - Could not open a connection to SQL Server)
 ---> System.ComponentModel.Win32Exception (53): The network path was not found.
   at Microsoft.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at Microsoft.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry, SqlConnectionOverrides overrides)
   at Microsoft.Data.SqlClient.SqlConnection.Open(SqlConnectionOverrides overrides)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerConnection.OpenDbConnection(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.<>c__DisplayClass18_0.<Exists>b__0(DateTime giveUp)
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.<>c__DisplayClass12_0`2.<Execute>b__0(DbContext _, TState s)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.Execute[TState,TResult](IExecutionStrategy strategy, TState state, Func`2 operation, Func`2 verifySucceeded)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.Exists(Boolean retryOnNotExists)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreated()
   at Whispers.Chat.Web.Configurations.MiddlewareConfig.SeedDatabase(WebApplication app) in C:\Users\callu\Documents\Codetest\text-forum-dos\Whispers.Chat\src\Whispers.Chat.Web\Configurations\MiddlewareConfig.cs:line 40
ClientConnectionId:00000000-0000-0000-0000-000000000000
Error Number:53,State:0,Class:20
2025-07-03 15:29:35.061 +02:00 [INF] User profile is available. Using 'C:\Users\callu\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2025-07-03 15:29:35.386 +02:00 [INF] Now listening on: https://localhost:50317
2025-07-03 15:29:35.391 +02:00 [INF] No action descriptors found. This may indicate an incorrectly configured application or missing application parts. To learn more, visit https://aka.ms/aspnet/mvc/app-parts
2025-07-03 15:29:35.469 +02:00 [INF] Application started. Press Ctrl+C to shut down.
2025-07-03 15:29:35.469 +02:00 [INF] Hosting environment: Development
2025-07-03 15:29:35.469 +02:00 [INF] Content root path: C:\Users\callu\Documents\Codetest\text-forum-dos\Whispers.Chat\src\Whispers.Chat.Web
2025-07-03 15:29:35.928 +02:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger - null null
2025-07-03 15:29:36.125 +02:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/index.html - null null
2025-07-03 15:29:36.119 +02:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger - 302 0 null 199.8558ms
2025-07-03 15:29:36.149 +02:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/index.html - 200 null text/html; charset=utf-8 24.6497ms
2025-07-03 15:29:36.183 +02:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/swagger-ui.css - null null
2025-07-03 15:29:36.185 +02:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/index.css - null null
2025-07-03 15:29:36.188 +02:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/swagger-ui-bundle.js - null null
2025-07-03 15:29:36.230 +02:00 [INF] Sending file. Request path: '/index.css'. Physical path: 'N/A'
2025-07-03 15:29:36.231 +02:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/index.css - 200 218 text/css 46.3986ms
2025-07-03 15:29:36.246 +02:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-07-03 15:29:36.247 +02:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/swagger-ui.css - 200 151213 text/css 65.0746ms
2025-07-03 15:29:36.264 +02:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-07-03 15:29:36.264 +02:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/swagger-ui-bundle.js - 200 1385018 text/javascript 79.3521ms
2025-07-03 15:29:36.347 +02:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/swagger-ui-standalone-preset.js - null null
2025-07-03 15:29:36.352 +02:00 [INF] Request starting HTTP/2 GET https://localhost:57679/_vs/browserLink - null null
2025-07-03 15:29:36.352 +02:00 [INF] Request starting HTTP/2 GET https://localhost:57679/_framework/aspnetcore-browser-refresh.js - null null
2025-07-03 15:29:36.354 +02:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-07-03 15:29:36.355 +02:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/swagger-ui-standalone-preset.js - 200 230642 text/javascript 7.6104ms
2025-07-03 15:29:36.358 +02:00 [INF] Request finished HTTP/2 GET https://localhost:57679/_framework/aspnetcore-browser-refresh.js - 200 16519 application/javascript; charset=utf-8 6.6214ms
2025-07-03 15:29:36.434 +02:00 [INF] Request finished HTTP/2 GET https://localhost:57679/_vs/browserLink - 200 null text/javascript; charset=UTF-8 81.7531ms
2025-07-03 15:29:36.516 +02:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/v1/swagger.json - null null
2025-07-03 15:29:36.531 +02:00 [INF] Request starting HTTP/2 GET https://localhost:57679/swagger/favicon-32x32.png - null null
2025-07-03 15:29:36.532 +02:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2025-07-03 15:29:36.532 +02:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/favicon-32x32.png - 200 628 image/png 0.6517ms
2025-07-03 15:29:36.594 +02:00 [INF] Request finished HTTP/2 GET https://localhost:57679/swagger/v1/swagger.json - 200 null application/json; charset=utf-8 77.5609ms
2025-07-03 16:31:36.020 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:31:36.040 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:31:36.040 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:31:36.040 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:31:36.203 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:31:36.203 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:31:36.203 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:31:36.204 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:33:25.409 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:33:25.430 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:33:25.430 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:33:25.430 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:35:28.151 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:35:28.170 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:35:28.170 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:35:28.170 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:35:28.320 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:35:28.320 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:35:28.320 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:35:28.320 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:37:51.621 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:37:51.640 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:37:51.640 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:37:51.641 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:14.513 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:14.533 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:14.534 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:14.534 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:44.237 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:44.256 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:44.257 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:44.257 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:59.500 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:59.520 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:59.521 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:59.521 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:39:59.763 +02:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2025-07-03 16:39:59.815 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-03 16:39:59.821 +02:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-07-03 16:39:59.827 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsLock" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK___EFMigrationsLock" PRIMARY KEY,
    "Timestamp" TEXT NOT NULL
);
2025-07-03 16:39:59.830 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-07-03 14:39:59.8283338+00:00');
SELECT changes();
2025-07-03 16:39:59.873 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-07-03 16:39:59.881 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-07-03 16:39:59.883 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-07-03 16:39:59.889 +02:00 [INF] Applying migration '20231218143922_PhoneNumber'.
2025-07-03 16:39:59.894 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Contributors" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Contributors" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NOT NULL,
    "Status" INTEGER NOT NULL,
    "PhoneNumber_CountryCode" TEXT NULL,
    "PhoneNumber_Number" TEXT NULL,
    "PhoneNumber_Extension" TEXT NULL
);
2025-07-03 16:39:59.894 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20231218143922_PhoneNumber', '9.0.6');
2025-07-03 16:39:59.894 +02:00 [INF] Applying migration '20250703094350_InitialCreate'.
2025-07-03 16:39:59.915 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Contributors";
2025-07-03 16:39:59.915 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Contributor" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Contributor" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NOT NULL,
    "Status" INTEGER NOT NULL,
    "PhoneNumber_CountryCode" TEXT NULL,
    "PhoneNumber_Number" TEXT NULL,
    "PhoneNumber_Extension" TEXT NULL
);
2025-07-03 16:39:59.915 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Posts" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Posts" PRIMARY KEY,
    "Title" TEXT NOT NULL,
    "Content" TEXT NOT NULL,
    "AuthorId" TEXT NOT NULL,
    "IsMisleading" INTEGER NOT NULL,
    "IsFalseInformation" INTEGER NOT NULL,
    "Tags" TEXT NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NOT NULL,
    "UpdatedBy" TEXT NULL
);
2025-07-03 16:39:59.916 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Roles" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Roles" PRIMARY KEY,
    "Name" TEXT NULL,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL
);
2025-07-03 16:39:59.916 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Users" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY,
    "LikedPostIds" TEXT NOT NULL,
    "IsAnonymous" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NOT NULL,
    "UpdatedBy" TEXT NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL
);
2025-07-03 16:39:59.916 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Comment" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Comment" PRIMARY KEY,
    "Content" TEXT NOT NULL,
    "AuthorId" TEXT NOT NULL,
    "PostId" TEXT NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NOT NULL,
    "UpdatedBy" TEXT NULL,
    CONSTRAINT "FK_Comment_Posts_PostId" FOREIGN KEY ("PostId") REFERENCES "Posts" ("Id") ON DELETE CASCADE
);
2025-07-03 16:39:59.916 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_RoleClaims_Roles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "Roles" ("Id") ON DELETE CASCADE
);
2025-07-03 16:39:59.916 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_UserClaims_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-07-03 16:39:59.917 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" TEXT NOT NULL,
    CONSTRAINT "PK_UserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_UserLogins_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-07-03 16:39:59.917 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserRoles" (
    "UserId" TEXT NOT NULL,
    "RoleId" TEXT NOT NULL,
    CONSTRAINT "PK_UserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_UserRoles_Roles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "Roles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserRoles_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-07-03 16:39:59.917 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserTokens" (
    "UserId" TEXT NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_UserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_UserTokens_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-07-03 16:39:59.917 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Comment_PostId" ON "Comment" ("PostId");
2025-07-03 16:39:59.917 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_RoleClaims_RoleId" ON "RoleClaims" ("RoleId");
2025-07-03 16:39:59.917 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "Roles" ("NormalizedName");
2025-07-03 16:39:59.917 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserClaims_UserId" ON "UserClaims" ("UserId");
2025-07-03 16:39:59.917 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserLogins_UserId" ON "UserLogins" ("UserId");
2025-07-03 16:39:59.918 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserRoles_RoleId" ON "UserRoles" ("RoleId");
2025-07-03 16:39:59.918 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "Users" ("NormalizedEmail");
2025-07-03 16:39:59.918 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "Users" ("NormalizedUserName");
2025-07-03 16:39:59.918 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703094350_InitialCreate', '9.0.6');
2025-07-03 16:39:59.918 +02:00 [INF] Applying migration '20250703095124_CreatingUserAuth'.
2025-07-03 16:39:59.924 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703095124_CreatingUserAuth', '9.0.6');
2025-07-03 16:39:59.924 +02:00 [INF] Applying migration '20250703112644_AddUser'.
2025-07-03 16:39:59.929 +02:00 [ERR] Failed executing DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Users" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY,
    "Username" nvarchar(256) NOT NULL,
    "Email" nvarchar(320) NOT NULL,
    "PasswordHash" nvarchar(max) NOT NULL,
    "LikedPostIds" nvarchar(max) NOT NULL,
    "IsAnonymous" bit NOT NULL DEFAULT 0,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL
);
2025-07-03 16:43:51.887 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:43:51.906 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:43:51.906 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:43:51.906 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:43:52.084 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-03 16:43:52.108 +02:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-07-03 16:43:52.118 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-07-03 14:43:52.111305+00:00');
SELECT changes();
2025-07-03 16:43:52.156 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-07-03 16:43:52.160 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-07-03 16:43:52.162 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-07-03 16:43:52.167 +02:00 [INF] Applying migration '20231218143922_PhoneNumber'.
2025-07-03 16:43:52.173 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Contributors" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Contributors" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NOT NULL,
    "Status" INTEGER NOT NULL,
    "PhoneNumber_CountryCode" TEXT NULL,
    "PhoneNumber_Number" TEXT NULL,
    "PhoneNumber_Extension" TEXT NULL
);
2025-07-03 16:43:52.173 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20231218143922_PhoneNumber', '9.0.6');
2025-07-03 16:43:52.173 +02:00 [INF] Applying migration '20250703094350_InitialCreate'.
2025-07-03 16:43:52.195 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Contributors";
2025-07-03 16:43:52.195 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Contributor" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Contributor" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NOT NULL,
    "Status" INTEGER NOT NULL,
    "PhoneNumber_CountryCode" TEXT NULL,
    "PhoneNumber_Number" TEXT NULL,
    "PhoneNumber_Extension" TEXT NULL
);
2025-07-03 16:43:52.195 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Posts" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Posts" PRIMARY KEY,
    "Title" TEXT NOT NULL,
    "Content" TEXT NOT NULL,
    "AuthorId" TEXT NOT NULL,
    "IsMisleading" INTEGER NOT NULL,
    "IsFalseInformation" INTEGER NOT NULL,
    "Tags" TEXT NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NOT NULL,
    "UpdatedBy" TEXT NULL
);
2025-07-03 16:43:52.195 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Roles" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Roles" PRIMARY KEY,
    "Name" TEXT NULL,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL
);
2025-07-03 16:43:52.195 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Users" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY,
    "LikedPostIds" TEXT NOT NULL,
    "IsAnonymous" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NOT NULL,
    "UpdatedBy" TEXT NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL
);
2025-07-03 16:43:52.196 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Comment" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Comment" PRIMARY KEY,
    "Content" TEXT NOT NULL,
    "AuthorId" TEXT NOT NULL,
    "PostId" TEXT NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NOT NULL,
    "UpdatedBy" TEXT NULL,
    CONSTRAINT "FK_Comment_Posts_PostId" FOREIGN KEY ("PostId") REFERENCES "Posts" ("Id") ON DELETE CASCADE
);
2025-07-03 16:43:52.196 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_RoleClaims_Roles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "Roles" ("Id") ON DELETE CASCADE
);
2025-07-03 16:43:52.196 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_UserClaims_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-07-03 16:43:52.196 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" TEXT NOT NULL,
    CONSTRAINT "PK_UserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_UserLogins_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-07-03 16:43:52.196 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserRoles" (
    "UserId" TEXT NOT NULL,
    "RoleId" TEXT NOT NULL,
    CONSTRAINT "PK_UserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_UserRoles_Roles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "Roles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserRoles_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-07-03 16:43:52.196 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserTokens" (
    "UserId" TEXT NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_UserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_UserTokens_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-07-03 16:43:52.196 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Comment_PostId" ON "Comment" ("PostId");
2025-07-03 16:43:52.197 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_RoleClaims_RoleId" ON "RoleClaims" ("RoleId");
2025-07-03 16:43:52.197 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "Roles" ("NormalizedName");
2025-07-03 16:43:52.197 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserClaims_UserId" ON "UserClaims" ("UserId");
2025-07-03 16:43:52.197 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserLogins_UserId" ON "UserLogins" ("UserId");
2025-07-03 16:43:52.197 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserRoles_RoleId" ON "UserRoles" ("RoleId");
2025-07-03 16:43:52.197 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "Users" ("NormalizedEmail");
2025-07-03 16:43:52.197 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "Users" ("NormalizedUserName");
2025-07-03 16:43:52.197 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703094350_InitialCreate', '9.0.6');
2025-07-03 16:43:52.197 +02:00 [INF] Applying migration '20250703095124_CreatingUserAuth'.
2025-07-03 16:43:52.204 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703095124_CreatingUserAuth', '9.0.6');
2025-07-03 16:43:52.204 +02:00 [INF] Applying migration '20250703112644_AddUser'.
2025-07-03 16:43:52.211 +02:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Users" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY,
    "Username" nvarchar(256) NOT NULL,
    "Email" nvarchar(320) NOT NULL,
    "PasswordHash" nvarchar(max) NOT NULL,
    "LikedPostIds" nvarchar(max) NOT NULL,
    "IsAnonymous" bit NOT NULL DEFAULT 0,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL
);
2025-07-03 16:45:30.766 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:45:30.786 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:45:30.786 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:45:30.786 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:45:30.967 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-03 16:45:30.995 +02:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-07-03 16:45:31.004 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-07-03 14:45:30.9976351+00:00');
SELECT changes();
2025-07-03 16:45:31.049 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-07-03 16:45:31.054 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-07-03 16:45:31.056 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-07-03 16:45:31.062 +02:00 [INF] Applying migration '20231218143922_PhoneNumber'.
2025-07-03 16:45:31.068 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Contributors" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Contributors" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NOT NULL,
    "Status" INTEGER NOT NULL,
    "PhoneNumber_CountryCode" TEXT NULL,
    "PhoneNumber_Number" TEXT NULL,
    "PhoneNumber_Extension" TEXT NULL
);
2025-07-03 16:45:31.068 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20231218143922_PhoneNumber', '9.0.6');
2025-07-03 16:45:31.068 +02:00 [INF] Applying migration '20250703094350_InitialCreate'.
2025-07-03 16:45:31.090 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP TABLE "Contributors";
2025-07-03 16:45:31.090 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Contributor" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Contributor" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NOT NULL,
    "Status" INTEGER NOT NULL,
    "PhoneNumber_CountryCode" TEXT NULL,
    "PhoneNumber_Number" TEXT NULL,
    "PhoneNumber_Extension" TEXT NULL
);
2025-07-03 16:45:31.090 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Posts" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Posts" PRIMARY KEY,
    "Title" TEXT NOT NULL,
    "Content" TEXT NOT NULL,
    "AuthorId" TEXT NOT NULL,
    "IsMisleading" INTEGER NOT NULL,
    "IsFalseInformation" INTEGER NOT NULL,
    "Tags" TEXT NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NOT NULL,
    "UpdatedBy" TEXT NULL
);
2025-07-03 16:45:31.090 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Roles" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Roles" PRIMARY KEY,
    "Name" TEXT NULL,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL
);
2025-07-03 16:45:31.091 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Users" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY,
    "LikedPostIds" TEXT NOT NULL,
    "IsAnonymous" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NOT NULL,
    "UpdatedBy" TEXT NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL
);
2025-07-03 16:45:31.091 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Comment" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_Comment" PRIMARY KEY,
    "Content" TEXT NOT NULL,
    "AuthorId" TEXT NOT NULL,
    "PostId" TEXT NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NOT NULL,
    "UpdatedBy" TEXT NULL,
    CONSTRAINT "FK_Comment_Posts_PostId" FOREIGN KEY ("PostId") REFERENCES "Posts" ("Id") ON DELETE CASCADE
);
2025-07-03 16:45:31.091 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_RoleClaims_Roles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "Roles" ("Id") ON DELETE CASCADE
);
2025-07-03 16:45:31.091 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_UserClaims_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-07-03 16:45:31.091 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" TEXT NOT NULL,
    CONSTRAINT "PK_UserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_UserLogins_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-07-03 16:45:31.091 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserRoles" (
    "UserId" TEXT NOT NULL,
    "RoleId" TEXT NOT NULL,
    CONSTRAINT "PK_UserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_UserRoles_Roles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "Roles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserRoles_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-07-03 16:45:31.092 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserTokens" (
    "UserId" TEXT NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_UserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_UserTokens_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE CASCADE
);
2025-07-03 16:45:31.092 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Comment_PostId" ON "Comment" ("PostId");
2025-07-03 16:45:31.092 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_RoleClaims_RoleId" ON "RoleClaims" ("RoleId");
2025-07-03 16:45:31.092 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "Roles" ("NormalizedName");
2025-07-03 16:45:31.092 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserClaims_UserId" ON "UserClaims" ("UserId");
2025-07-03 16:45:31.092 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserLogins_UserId" ON "UserLogins" ("UserId");
2025-07-03 16:45:31.092 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserRoles_RoleId" ON "UserRoles" ("RoleId");
2025-07-03 16:45:31.092 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "Users" ("NormalizedEmail");
2025-07-03 16:45:31.092 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "Users" ("NormalizedUserName");
2025-07-03 16:45:31.093 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703094350_InitialCreate', '9.0.6');
2025-07-03 16:45:31.093 +02:00 [INF] Applying migration '20250703095124_CreatingUserAuth'.
2025-07-03 16:45:31.099 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703095124_CreatingUserAuth', '9.0.6');
2025-07-03 16:45:31.099 +02:00 [INF] Applying migration '20250703112644_AddUser'.
2025-07-03 16:45:31.106 +02:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Users" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY,
    "Username" nvarchar(256) NOT NULL,
    "Email" nvarchar(320) NOT NULL,
    "PasswordHash" nvarchar(max) NOT NULL,
    "LikedPostIds" nvarchar(max) NOT NULL,
    "IsAnonymous" bit NOT NULL DEFAULT 0,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL
);
2025-07-03 16:47:45.441 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:47:45.460 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:47:45.460 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:47:45.461 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:47:45.641 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-03 16:47:45.668 +02:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-07-03 16:47:45.678 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-07-03 14:47:45.6712049+00:00');
SELECT changes();
2025-07-03 16:47:45.720 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-07-03 16:47:45.725 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-07-03 16:47:45.726 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-07-03 16:47:45.733 +02:00 [INF] Applying migration '20250703094350_InitialCreate'.
2025-07-03 16:47:45.743 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703094350_InitialCreate', '9.0.6');
2025-07-03 16:47:45.744 +02:00 [INF] Applying migration '20250703095124_CreatingUserAuth'.
2025-07-03 16:47:45.752 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703095124_CreatingUserAuth', '9.0.6');
2025-07-03 16:47:45.752 +02:00 [INF] Applying migration '20250703112644_AddUser'.
2025-07-03 16:47:45.767 +02:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Users" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY,
    "Username" nvarchar(256) NOT NULL,
    "Email" nvarchar(320) NOT NULL,
    "PasswordHash" nvarchar(max) NOT NULL,
    "LikedPostIds" nvarchar(max) NOT NULL,
    "IsAnonymous" bit NOT NULL DEFAULT 0,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL
);
2025-07-03 16:49:18.198 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:49:18.218 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:49:18.219 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:49:18.219 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:49:18.401 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-03 16:49:18.427 +02:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-07-03 16:49:18.437 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-07-03 14:49:18.4303904+00:00');
SELECT changes();
2025-07-03 16:49:18.476 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-07-03 16:49:18.480 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-07-03 16:49:18.482 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-07-03 16:49:18.488 +02:00 [INF] Applying migration '20250703094350_InitialCreate'.
2025-07-03 16:49:18.496 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703094350_InitialCreate', '9.0.6');
2025-07-03 16:49:18.496 +02:00 [INF] Applying migration '20250703095124_CreatingUserAuth'.
2025-07-03 16:49:18.502 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703095124_CreatingUserAuth', '9.0.6');
2025-07-03 16:49:18.502 +02:00 [INF] Applying migration '20250703112644_AddUser'.
2025-07-03 16:49:18.511 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Users" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY,
    "Username" nvarchar(256) NOT NULL,
    "Email" nvarchar(320) NOT NULL,
    "PasswordHash" nvarchar(256) NOT NULL,
    "LikedPostIds" nvarchar(256) NOT NULL,
    "IsAnonymous" bit NOT NULL DEFAULT 0,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL
);
2025-07-03 16:49:18.511 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Users_Username" ON "Users" ("Username");
2025-07-03 16:49:18.511 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Users_Email" ON "Users" ("Email");
2025-07-03 16:49:18.511 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Users_IsAnonymous" ON "Users" ("IsAnonymous");
2025-07-03 16:49:18.511 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Users_DateCreated" ON "Users" ("DateCreated");
2025-07-03 16:49:18.511 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703112644_AddUser', '9.0.6');
2025-07-03 16:49:18.511 +02:00 [INF] Applying migration '20250703113417_AddPost'.
2025-07-03 16:49:18.518 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Posts" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Posts" PRIMARY KEY,
    "Title" nvarchar(500) NOT NULL,
    "Content" nvarchar(256) NOT NULL,
    "AuthorId" uniqueidentifier NOT NULL,
    "LikedByUserIds" nvarchar(256) NOT NULL,
    "IsMisleading" bit NOT NULL DEFAULT 0,
    "IsFalseInformation" bit NOT NULL DEFAULT 0,
    "Tags" nvarchar(256) NOT NULL,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL,
    CONSTRAINT "FK_Posts_Users_AuthorId" FOREIGN KEY ("AuthorId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);
2025-07-03 16:49:18.518 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_AuthorId" ON "Posts" ("AuthorId");
2025-07-03 16:49:18.518 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_DateCreated" ON "Posts" ("DateCreated");
2025-07-03 16:49:18.518 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_Title" ON "Posts" ("Title");
2025-07-03 16:49:18.518 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_IsMisleading" ON "Posts" ("IsMisleading");
2025-07-03 16:49:18.518 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_IsFalseInformation" ON "Posts" ("IsFalseInformation");
2025-07-03 16:49:18.519 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_IsMisleading_IsFalseInformation" ON "Posts" ("IsMisleading", "IsFalseInformation");
2025-07-03 16:49:18.519 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703113417_AddPost', '9.0.6');
2025-07-03 16:49:18.519 +02:00 [INF] Applying migration '20250703113921_AddModerator'.
2025-07-03 16:49:18.524 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Moderators" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Moderators" PRIMARY KEY,
    "UserId" uniqueidentifier NOT NULL,
    "IsActive" bit NOT NULL DEFAULT 1,
    "ModeratedPostIds" nvarchar(256) NOT NULL,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL,
    CONSTRAINT "FK_Moderators_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);
2025-07-03 16:49:18.524 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Moderators_UserId" ON "Moderators" ("UserId");
2025-07-03 16:49:18.524 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Moderators_IsActive" ON "Moderators" ("IsActive");
2025-07-03 16:49:18.524 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Moderators_DateCreated" ON "Moderators" ("DateCreated");
2025-07-03 16:49:18.525 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Moderators_IsActive_DateCreated" ON "Moderators" ("IsActive", "DateCreated");
2025-07-03 16:49:18.525 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703113921_AddModerator', '9.0.6');
2025-07-03 16:49:18.525 +02:00 [INF] Applying migration '20250703143944_AddNewColumnToUser'.
2025-07-03 16:49:18.541 +02:00 [WRN] The migration operation 'PRAGMA foreign_keys = 0;
' from migration 'AddNewColumnToUser' cannot be executed in a transaction. If the app is terminated or an unrecoverable error occurs while this operation is being executed then the migration will be left in a partially applied state and would need to be reverted manually before it can be applied again. Create a separate migration that contains just this operation.
2025-07-03 16:49:18.543 +02:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "moderators" RENAME TO "Moderators";
2025-07-03 16:50:49.507 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:50:49.526 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:50:49.526 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:50:49.526 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:50:49.697 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-03 16:50:49.720 +02:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-07-03 16:50:49.907 +02:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsLock" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK___EFMigrationsLock" PRIMARY KEY,
    "Timestamp" TEXT NOT NULL
);
2025-07-03 16:50:50.092 +02:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-07-03 14:50:49.9080586+00:00');
SELECT changes();
2025-07-03 16:50:50.303 +02:00 [INF] Executed DbCommand (167ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-07-03 16:50:50.560 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-07-03 16:50:50.561 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-07-03 16:50:50.568 +02:00 [INF] Applying migration '20250703094350_InitialCreate'.
2025-07-03 16:50:50.578 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703094350_InitialCreate', '9.0.6');
2025-07-03 16:50:50.578 +02:00 [INF] Applying migration '20250703095124_CreatingUserAuth'.
2025-07-03 16:50:50.585 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703095124_CreatingUserAuth', '9.0.6');
2025-07-03 16:50:50.585 +02:00 [INF] Applying migration '20250703112644_AddUser'.
2025-07-03 16:50:50.595 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Users" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY,
    "Username" nvarchar(256) NOT NULL,
    "Email" nvarchar(320) NOT NULL,
    "PasswordHash" nvarchar(256) NOT NULL,
    "LikedPostIds" nvarchar(256) NOT NULL,
    "IsAnonymous" bit NOT NULL DEFAULT 0,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL
);
2025-07-03 16:50:50.595 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Users_Username" ON "Users" ("Username");
2025-07-03 16:50:50.595 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Users_Email" ON "Users" ("Email");
2025-07-03 16:50:50.595 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Users_IsAnonymous" ON "Users" ("IsAnonymous");
2025-07-03 16:50:50.596 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Users_DateCreated" ON "Users" ("DateCreated");
2025-07-03 16:50:50.596 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703112644_AddUser', '9.0.6');
2025-07-03 16:50:50.596 +02:00 [INF] Applying migration '20250703113417_AddPost'.
2025-07-03 16:50:50.603 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Posts" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Posts" PRIMARY KEY,
    "Title" nvarchar(500) NOT NULL,
    "Content" nvarchar(256) NOT NULL,
    "AuthorId" uniqueidentifier NOT NULL,
    "LikedByUserIds" nvarchar(256) NOT NULL,
    "IsMisleading" bit NOT NULL DEFAULT 0,
    "IsFalseInformation" bit NOT NULL DEFAULT 0,
    "Tags" nvarchar(256) NOT NULL,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL,
    CONSTRAINT "FK_Posts_Users_AuthorId" FOREIGN KEY ("AuthorId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);
2025-07-03 16:50:50.603 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_AuthorId" ON "Posts" ("AuthorId");
2025-07-03 16:50:50.604 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_DateCreated" ON "Posts" ("DateCreated");
2025-07-03 16:50:50.604 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_Title" ON "Posts" ("Title");
2025-07-03 16:50:50.604 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_IsMisleading" ON "Posts" ("IsMisleading");
2025-07-03 16:50:50.604 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_IsFalseInformation" ON "Posts" ("IsFalseInformation");
2025-07-03 16:50:50.604 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_IsMisleading_IsFalseInformation" ON "Posts" ("IsMisleading", "IsFalseInformation");
2025-07-03 16:50:50.604 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703113417_AddPost', '9.0.6');
2025-07-03 16:50:50.604 +02:00 [INF] Applying migration '20250703113921_AddModerator'.
2025-07-03 16:50:50.611 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Moderators" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Moderators" PRIMARY KEY,
    "UserId" uniqueidentifier NOT NULL,
    "IsActive" bit NOT NULL DEFAULT 1,
    "ModeratedPostIds" nvarchar(256) NOT NULL,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL,
    CONSTRAINT "FK_Moderators_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);
2025-07-03 16:50:50.611 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Moderators_UserId" ON "Moderators" ("UserId");
2025-07-03 16:50:50.611 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Moderators_IsActive" ON "Moderators" ("IsActive");
2025-07-03 16:50:50.611 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Moderators_DateCreated" ON "Moderators" ("DateCreated");
2025-07-03 16:50:50.611 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Moderators_IsActive_DateCreated" ON "Moderators" ("IsActive", "DateCreated");
2025-07-03 16:50:50.612 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703113921_AddModerator', '9.0.6');
2025-07-03 16:50:50.612 +02:00 [INF] Applying migration '20250703143944_AddNewColumnToUser'.
2025-07-03 16:50:50.632 +02:00 [WRN] The migration operation 'PRAGMA foreign_keys = 0;
' from migration 'AddNewColumnToUser' cannot be executed in a transaction. If the app is terminated or an unrecoverable error occurs while this operation is being executed then the migration will be left in a partially applied state and would need to be reverted manually before it can be applied again. Create a separate migration that contains just this operation.
2025-07-03 16:50:50.635 +02:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "moderators" RENAME TO "Moderators";
2025-07-03 16:52:17.023 +02:00 [WRN] The property 'User.LikedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:52:17.042 +02:00 [WRN] The property 'Post.Tags' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:52:17.042 +02:00 [WRN] The property 'Post._likedByUserIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:52:17.043 +02:00 [WRN] The property 'Moderator._moderatedPostIds' is a collection or enumeration type with a value converter but with no value comparer. Set a value comparer to ensure the collection/enumeration elements are compared correctly.
2025-07-03 16:52:17.432 +02:00 [INF] Executed DbCommand (189ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2025-07-03 16:52:17.438 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-07-03 16:52:17.444 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsLock' AND "type" = 'table';
2025-07-03 16:52:17.576 +02:00 [INF] Executed DbCommand (132ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsLock" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK___EFMigrationsLock" PRIMARY KEY,
    "Timestamp" TEXT NOT NULL
);
2025-07-03 16:52:17.579 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT OR IGNORE INTO "__EFMigrationsLock"("Id", "Timestamp") VALUES(1, '2025-07-03 14:52:17.5771889+00:00');
SELECT changes();
2025-07-03 16:52:17.621 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" TEXT NOT NULL CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY,
    "ProductVersion" TEXT NOT NULL
);
2025-07-03 16:52:17.630 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2025-07-03 16:52:17.632 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2025-07-03 16:52:17.638 +02:00 [INF] Applying migration '20250703095124_CreatingUserAuth'.
2025-07-03 16:52:17.646 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703095124_CreatingUserAuth', '9.0.6');
2025-07-03 16:52:17.647 +02:00 [INF] Applying migration '20250703112644_AddUser'.
2025-07-03 16:52:17.655 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Users" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Users" PRIMARY KEY,
    "Username" nvarchar(256) NOT NULL,
    "Email" nvarchar(320) NOT NULL,
    "PasswordHash" nvarchar(256) NOT NULL,
    "LikedPostIds" nvarchar(256) NOT NULL,
    "IsAnonymous" bit NOT NULL DEFAULT 0,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL
);
2025-07-03 16:52:17.655 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Users_Username" ON "Users" ("Username");
2025-07-03 16:52:17.655 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Users_Email" ON "Users" ("Email");
2025-07-03 16:52:17.655 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Users_IsAnonymous" ON "Users" ("IsAnonymous");
2025-07-03 16:52:17.655 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Users_DateCreated" ON "Users" ("DateCreated");
2025-07-03 16:52:17.656 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703112644_AddUser', '9.0.6');
2025-07-03 16:52:17.656 +02:00 [INF] Applying migration '20250703113417_AddPost'.
2025-07-03 16:52:17.662 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Posts" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Posts" PRIMARY KEY,
    "Title" nvarchar(500) NOT NULL,
    "Content" nvarchar(256) NOT NULL,
    "AuthorId" uniqueidentifier NOT NULL,
    "LikedByUserIds" nvarchar(256) NOT NULL,
    "IsMisleading" bit NOT NULL DEFAULT 0,
    "IsFalseInformation" bit NOT NULL DEFAULT 0,
    "Tags" nvarchar(256) NOT NULL,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL,
    CONSTRAINT "FK_Posts_Users_AuthorId" FOREIGN KEY ("AuthorId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);
2025-07-03 16:52:17.662 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_AuthorId" ON "Posts" ("AuthorId");
2025-07-03 16:52:17.662 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_DateCreated" ON "Posts" ("DateCreated");
2025-07-03 16:52:17.662 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_Title" ON "Posts" ("Title");
2025-07-03 16:52:17.662 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_IsMisleading" ON "Posts" ("IsMisleading");
2025-07-03 16:52:17.663 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_IsFalseInformation" ON "Posts" ("IsFalseInformation");
2025-07-03 16:52:17.663 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Posts_IsMisleading_IsFalseInformation" ON "Posts" ("IsMisleading", "IsFalseInformation");
2025-07-03 16:52:17.663 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703113417_AddPost', '9.0.6');
2025-07-03 16:52:17.663 +02:00 [INF] Applying migration '20250703113921_AddModerator'.
2025-07-03 16:52:17.668 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Moderators" (
    "Id" uniqueidentifier NOT NULL CONSTRAINT "PK_Moderators" PRIMARY KEY,
    "UserId" uniqueidentifier NOT NULL,
    "IsActive" bit NOT NULL DEFAULT 1,
    "ModeratedPostIds" nvarchar(256) NOT NULL,
    "DateCreated" datetime2 NOT NULL DEFAULT (GETUTCDATE()),
    "DateUpdated" datetime2 NULL,
    "CreatedBy" uniqueidentifier NOT NULL,
    "UpdatedBy" uniqueidentifier NULL,
    CONSTRAINT "FK_Moderators_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id") ON DELETE RESTRICT
);
2025-07-03 16:52:17.668 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Moderators_UserId" ON "Moderators" ("UserId");
2025-07-03 16:52:17.668 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Moderators_IsActive" ON "Moderators" ("IsActive");
2025-07-03 16:52:17.669 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Moderators_DateCreated" ON "Moderators" ("DateCreated");
2025-07-03 16:52:17.669 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Moderators_IsActive_DateCreated" ON "Moderators" ("IsActive", "DateCreated");
2025-07-03 16:52:17.669 +02:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250703113921_AddModerator', '9.0.6');
2025-07-03 16:52:17.900 +02:00 [INF] Executed DbCommand (70ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DELETE FROM "__EFMigrationsLock";
